int calculer_nouv_plaque(const t_matrice plaque, t_matrice nouv_plaque,
	t_matbool pos_fixes, int dimy, int dimx, int mode, double epsilon, double coeff) {
	int j, i;
	int equilibre = 1;

	for (i = 0; i < dimy; ++i) {
		for (j = 0; j < dimx; ++j) {
			if (pos_fixes[i][j] == 0) {
				nouv_plaque[i][j] = (plaque[i][j] * coeff) + (moyenne_voisins(plaque,i , j, mode)) * (1.0 - coeff);
				//si cette valeur depasse la difference epsilon
				if (plaque[i][j] - nouv_plaque[i][j] <= epsilon) {
					equilibre = 0;
				}
			}
			else {
				nouv_plaque[i][j] = plaque[i][j];
			}
		}
	}
	if (equilibre == 0) {
		return 0;
	}
	else {
		return 1;
	}
	
}
